---
# Source: cubestore/templates/router/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: qstore
  labels:
    helm.sh/chart: cubestore-0.9.0
    app.kubernetes.io/name: cubestore
    app.kubernetes.io/instance: qstore
    app.kubernetes.io/version: "0.33.4"
    app.kubernetes.io/managed-by: Helm
    io: debug
automountServiceAccountToken: true
---
# Source: cubestore/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: qstore-cubestore-remote-storage
  labels:
    app.kubernetes.io/component: remote-storage
    app.kubernetes.io/name: cubestore
    app.kubernetes.io/instance: qstore
    io: debug
  annotations:
    helm.sh/resource-policy: keep
    io.io/tags: '{"env": "test", "team": "lupi" }'
spec:
  accessModes:
    - "ReadWriteMany"
  resources:
    requests:
      storage: 4Gi
  storageClassName: pvc
---
# Source: cubestore/templates/router/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: qstore-cubestore-router
  labels:
    app.kubernetes.io/component: router
    helm.sh/chart: cubestore-0.9.0
    app.kubernetes.io/name: cubestore
    app.kubernetes.io/instance: qstore
    app.kubernetes.io/version: "0.33.4"
    app.kubernetes.io/managed-by: Helm
    io: debug
  annotations:
    io.io/tags: '{"env": "test", "team": "lupi" }'
spec:
  ports:
    - name: http
      port: 3030
      targetPort: http
    - name: meta
      port: 9999
      targetPort: meta
  selector:
    app.kubernetes.io/component: router
    app.kubernetes.io/name: cubestore
    app.kubernetes.io/instance: qstore
---
# Source: cubestore/templates/workers/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: qstore-cubestore-headless
  labels:
    app.kubernetes.io/component: workers
    helm.sh/chart: cubestore-0.9.0
    app.kubernetes.io/name: cubestore
    app.kubernetes.io/instance: qstore
    app.kubernetes.io/version: "0.33.4"
    app.kubernetes.io/managed-by: Helm
    io: debug
  annotations:
    io.io/tags: '{"env": "test", "team": "lupi" }'
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: worker
      port: 9001
      targetPort: worker
  selector:
    app.kubernetes.io/component: workers
    app.kubernetes.io/name: cubestore
    app.kubernetes.io/instance: qstore
---
# Source: cubestore/templates/router/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: qstore-cubestore-router
  labels:
    helm.sh/chart: cubestore-0.9.0
    app.kubernetes.io/name: cubestore
    app.kubernetes.io/instance: qstore
    app.kubernetes.io/version: "0.33.4"
    app.kubernetes.io/managed-by: Helm
    io: debug
  annotations:
    io.io/tags: '{"env": "test", "team": "lupi" }'
spec:
  serviceName: qstore-cubestore-router
  selector:
    matchLabels:
      app.kubernetes.io/component: router
      app.kubernetes.io/name: cubestore
      app.kubernetes.io/instance: qstore
  template:
    metadata:
      labels:
        io.io/tags: test
        app.kubernetes.io/component: router
        app.kubernetes.io/name: cubestore
        app.kubernetes.io/instance: qstore
        io: debug
      annotations:
        io.io/tags: '{"env": "test", "team": "lupi" }'
    spec:
      serviceAccountName: qstore
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
      containers:
        - name: cubestore
          image: "cube-store:latest"
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: http
              containerPort: 3030
              protocol: TCP
            - name: meta
              containerPort: 9999
              protocol: TCP
            - name: status
              containerPort: 3031
              protocol: TCP
          env:
            - name: CUBESTORE_LOG_LEVEL
              value: "debug"
            - name: CUBESTORE_NO_UPLOAD
              value: "true"
            - name: CUBESTORE_TELEMETRY
              value: "false"
            - name: CUBESTORE_SERVER_NAME
              value: qstore-cubestore-router:9999
            - name: CUBESTORE_HTTP_PORT
              value: "3030"
            - name: CUBESTORE_META_PORT
              value: "9999"
            - name: CUBESTORE_STATUS_PORT
              value: "3031"
            - name: CUBESTORE_WORKERS
              value: "qstore-cubestore-workers-0.qstore-cubestore-headless:9001"
            - name: CUBESTORE_DATA_DIR
              value: /cube/.cubestore/data
            - name: CUBESTORE_REMOTE_DIR
              value: /cube/data
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
            httpGet:
              path: /livez
              port: status
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: status
          volumeMounts:
            - name: datadir
              mountPath: /cube/.cubestore/data
            - name: remotedir
              mountPath: /cube/data
      volumes:
        - name: remotedir
          persistentVolumeClaim:
            claimName: qstore-cubestore-remote-storage
  volumeClaimTemplates:
    - metadata:
        name: datadir
        labels:
          app.kubernetes.io/component: router
          app.kubernetes.io/name: cubestore
          app.kubernetes.io/instance: qstore
      spec:
        accessModes:
          - "ReadWriteOnce"
        storageClassName: pvc
        resources:
          requests:
            storage: "1Gi"
---
# Source: cubestore/templates/workers/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: qstore-cubestore-workers
  labels:
    helm.sh/chart: cubestore-0.9.0
    app.kubernetes.io/name: cubestore
    app.kubernetes.io/instance: qstore
    app.kubernetes.io/version: "0.33.4"
    app.kubernetes.io/managed-by: Helm
    io: debug
  annotations:
    io.io/tags: '{"env": "test", "team": "lupi" }'
spec:
  replicas: 1
  serviceName: qstore-cubestore-headless
  selector:
    matchLabels:
      app.kubernetes.io/component: workers
      app.kubernetes.io/name: cubestore
      app.kubernetes.io/instance: qstore
  template:
    metadata:
      labels:
        app.kubernetes.io/component: workers
        app.kubernetes.io/name: cubestore
        app.kubernetes.io/instance: qstore
        io: debug
      annotations:
        io.io/tags: '{"env": "test", "team": "lupi" }'
    spec:
      serviceAccountName: qstore
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
      containers:
        - name: cubestore
          image: "cube-store:latest"
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: worker
              containerPort: 9001
              protocol: TCP
          env:
            - name: CUBESTORE_LOG_LEVEL
              value: "debug"
            - name: CUBESTORE_NO_UPLOAD
              value: "true"
            - name: CUBESTORE_TELEMETRY
              value: "false"
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CUBESTORE_SERVER_NAME
              value: "$(MY_POD_NAME).qstore-cubestore-headless:9001"
            - name: CUBESTORE_WORKER_PORT
              value: "9001"
            - name: CUBESTORE_WORKERS
              value: "qstore-cubestore-workers-0.qstore-cubestore-headless:9001"
            - name: CUBESTORE_META_ADDR
              value: qstore-cubestore-router:9999
            - name: CUBESTORE_DATA_DIR
              # TODO !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
              value: /cube/.cubestore/data
            - name: CUBESTORE_REMOTE_DIR
              # TODO !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
              value: /cube/data
          volumeMounts:
            - name: datadir
              mountPath: /cube/.cubestore/data
            - name: remotedir
              mountPath: /cube/data
      initContainers:
        - name: init-router
          image: busybox
          command: ['sh', '-c', 'until nc -vz qstore-cubestore-router 9999; do echo "Waiting for router"; sleep 2; done;']
      volumes:
        - name: remotedir
          persistentVolumeClaim:
            claimName: qstore-cubestore-remote-storage
  volumeClaimTemplates:
    - metadata:
        name: datadir
        labels:
          app.kubernetes.io/component: cubestore-router
          app.kubernetes.io/name: cubestore
          app.kubernetes.io/instance: qstore
      spec:
        accessModes:
          - "ReadWriteOnce"
        storageClassName: pvc
        resources:
          requests:
            storage: "1Gi"

