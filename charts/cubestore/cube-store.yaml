## Override the name
##
nameOverride: "cubexex"

securityContext:
  enabled: false
  fsGroup: 1001
  runAsUser: 1001

#commonAnnotations:
#  io.io/tags: '{"env": "test", "team": "vitals_detected" }'

commonLabels:
  io: "debug"

## Override the name
##
nameOverride: "storeI"

image:
  ## Docker image repository
  ##
  repository: "${repo}"
  ## Docker image tag.
  ## Defaults to Chart AppVersion
  ##
  tag: "cubestore"
  ## Specify a imagePullPolicy
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  #pullPolicy: Always
  ## Specify a imagePullSecrets
  ## ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  ##
  pullSecrets:
    - name: myecr

config:
  ## The logging level for Cube Store.
  ##
  logLevel: "debug"

  ## If true, prevents uploading serialized pre-aggregations to cloud storage
  ##
  noUpload: true

  ## If true, then send telemetry to Cube
  ##
  telemetry: false
  ## The number of Cube Store sub-processes that handle SELECT queries. Defaults to 4
  ##
  selectWorkers: 1

## Used to define the shared volume to store metadata and datasets
## Prefer use cloudStorage if your are running on "gcp" or "aws"
## If a cloudStorage configuration is used, no remoteDir will be created
##
remoteDir:
  persistence:
    ## Resource Policy
    ## Setting it to "keep" to avoid removing PVCs during a helm delete operation
    ##
    resourcePolicy: keep

    ## Persistent Volume size
    ##
    size: 4Gi

    ## Additional custom annotations for the PVC
    ##
    annotations: {}

    ## Persistent Volume access modes
    ##
    accessModes:
      - ReadWriteMany

    ## @param remoteDir.persistence.storageClass The storage class to use for the remoteDir pvc
    ## If defined, storageClassName: <storageClass>
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: pvc

router:
  ## Service account for cubestore router to use
  ##
  serviceAccount:
    create: true
    name: "vitals"
  ## The port for Cube Store to listen to HTTP connections on
  ##
  httpPort: 3030

  ## The port for the router node to listen for connections on
  ##
  metaPort: 9999

  ## The port for Cube Store to expose status probes
  ##
  statusPort: 3031

  persistence:
    ## Enable persistence for local data using Persistent Volume Claims
    ##
    enabled: true

    ## Persistent Volume size
    ##
    size: 1Gi

    ## Persistent Volume access modes
    ##
    accessModes:
      - ReadWriteOnce

    ## @param router.persistence.storageClass The storage class to use for the workers pvc
    ## If defined, storageClassName: <storageClass>
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: pvc

  ## Configure options for liveness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 10
    successThreshold: 1
    failureThreshold: 3

  ## Configure options for liveness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 10
    successThreshold: 1
    failureThreshold: 3

workers:
  ## Service account for cubestore workers to use
  ##
  serviceAccount:
    create: true
    name: vitals
    automountServiceAccountToken: true
    annotations: {}

  ## Number of workers to deploy
  ##
  workersCount: 1

  ## The port for Cube Store workers to listen to connections on
  ##
  port: 9001

  persistence:
    ## Enable persistence for local data using Persistent Volume Claims
    ##
    enabled: true

    ## Persistent Volume size
    ##
    size: 1Gi

    ## Persistent Volume access modes
    ##
    accessModes:
      - ReadWriteOnce

    ## @param workers.persistence.storageClass The storage class to use for the workers pvc
    ## If defined, storageClassName: <storageClass>
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: pvc
